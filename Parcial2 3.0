fmod PARCIAL is

protecting INT .
protecting STRING .
protecting FLOAT .
protecting BOOL .


sort hotel . ***1.1
sort viajero .

sort Lhotel . ***2.1

subsort hotel < Lhotel . ***2.1

op hotel(_,_,_,_,_,_) : Int String Float String Float Float -> hotel [ctor] . ***1.1
op viajero(_,_,_,_) : Int String hotel Float -> viajero [ctor] .

op nilLhotel : -> Lhotel [ctor] . ***2.1
op _ _ : hotel hotel -> Lhotel  [ctor assoc id: nilLhotel] .


op calcular(_,_,_) : Float hotel viajero -> Float . ***1.2

op hallar(_,_,_) : Float Lhotel viajero -> hotel .  ***2.2
op minx(_,_,_,_) : Float Lhotel viajero Float -> Bool .


op hallar2(_,_,_) : Float Lhotel viajero -> hotel .
op hallar2(_,_,_,_) : Float Lhotel viajero hotel -> hotel .
op menor(_,_,_,_) : Float Float Lhotel viajero -> Bool .
op tres(_) : Lhotel -> Int .

var I : Int .

op L1 : -> Lhotel . ***Listas de pruebas
op L2 : -> Lhotel .
op via : -> viajero .

vars IHO ID : Int .
vars NM NA ML : String .
vars CT PR VP PT N AC FL : Float .

vars HT H : hotel .
var LH : Lhotel .
var V : viajero .

eq calcular(N,hotel(IHO,NM,CT,NA,PR,VP),viajero(ID,ML,HT,PT)) = (0.03 * CT) * (N * PR) .  ***1.2
ceq calcular(N,hotel(IHO,NM,CT,NA,PR,VP),viajero(ID,ML,HT,PT)) = (((N * PR) + ((0.03 * CT) * (N * PR))) - (VP * PT)) if ((N * PR) >= (PT * VP)) . 


eq hallar(N,nilLhotel,V) = nilLhotel .  ***2.2
ceq hallar(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = hotel(IHO,NM,CT,NA,PR,VP) if ((CT > 2.0) and minx(N,LH,V,calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V))) .
ceq hallar(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = hallar(N,LH,V) if (((CT > 2.0) and not(minx(N,LH,V,calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)))) or (CT < 3.0)) .
***ceq hallar(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = hallar(N,LH,V) if (CT < 3.0) .


eq minx(N,nilLhotel,viajero(ID,ML,HT,PT),AC) = true . ***OP Auxiliar para 2.2
ceq minx(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V,AC) = false if ((CT > 2.0) and (AC > (calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)))) .
ceq minx(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V,AC) = minx(N,LH,V,AC) if ((CT > 2.0) and (AC < calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V))) .
ceq minx(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V,AC) = minx(N,LH,V,AC) if (CT < 3.0) . 



eq hallar2(N,nilLhotel,V) = nilLhotel . ***OP Auxiliar para 2.2
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP),V) = hotel(IHO,NM,CT,NA,PR,VP) if (CT > 2.0) .
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP),V) = nilLhotel if (CT < 3.0) .
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = hallar2(N,LH,V,hotel(IHO,NM,CT,NA,PR,VP)) if ((CT > 2.0) and (menor(N,calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V),LH,V))) .
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = hallar2(N,LH,V) if (CT < 3.0) .
eq hallar2(N,nilLhotel,V,H) = H .
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V,H) = hallar2(N,LH,V,hotel(IHO,NM,CT,NA,PR,VP)) if ((CT > 2.0) and (menor(N,calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V),LH,V))) .
ceq hallar2(N,hotel(IHO,NM,CT,NA,PR,VP) LH,V,H) = hallar2(N,LH,V,H) if (CT < 3.0) .

eq menor(N,FL,nilLhotel,V) = true .
ceq menor(N,FL,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = true if (FL < calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)) and (CT > 3.0) . 
ceq menor(N,FL,hotel(IHO,NM,CT,NA,PR,VP) LH,V) = false if (FL > calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)) and (CT < 3.0) . 
ceq menor(N,FL,hotel(IHO,NM,CT,NA,PR,VP),V) = true if (FL < calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)) and (CT > 3.0) . 
ceq menor(N,FL,hotel(IHO,NM,CT,NA,PR,VP),V) = false if (FL > calcular(N,hotel(IHO,NM,CT,NA,PR,VP),V)) and (CT < 3.0) . 




eq tres(nilLhotel) = 0 .
ceq tres(hotel(IHO,NM,CT,NA,PR,VP) LH) = 1 + tres(LH) if (CT > 2.0) .
ceq tres(hotel(IHO,NM,CT,NA,PR,VP) LH) = tres(LH) if (CT < 3.0) .

eq L1 = hotel(6,"hotel 6",1.0,"28136596",15000.0,20.0) hotel(7,"hotel 7",3.0,"4589656",300.0,5.0) hotel(4,"hotel 4",5.0,"24569891",195000.0,2000.0) .

eq L2 = hotel(6,"hotel 6",1.0,"28136596",15000.0,20.0) hotel(7,"hotel 6",3.0,"4589656",300.0,5.0) hotel(4,"hotel 4",5.0,"24569891",195000.0,2000.0) hotel(7,"hotel 6",3.0,"4589656",300.0,5.0) .

eq via = viajero(23,"algoarroba",hotel(3,"hotel 3",5.0,"2456941",35000.0,890.0),25.0) .




endfm




fmod PARCIALB is

protecting PARCIAL .



sort Lv . ***3.1
subsort viajero < Lv . ***3.1


op nilLv : -> Lv [ctor] .
op _ _ : viajero viajero -> Lv [ctor assoc id: nilLv] .


op hotel(_,_,_,_,_,_,_) : Int String Float String Float Float Lv -> hotel [ctor] .


vars N : Float .






endfm
